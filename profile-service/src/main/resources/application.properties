# Nombre del microservicio
spring.application.name=profile-service

# Puerto único
server.port=0

# Configuración de la base de datos (puede compartirla o no)
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/profile-service?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=password

#Eureka client
eureka.client.service-url.default-zone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Naming Strategy (si aplica y tienes esa clase importada)
spring.jpa.hibernate.naming.physical-strategy=org.learne.platform.profileservice.shared.infrastructure.persistence.jpa.configuration.strategy.SnakeCaseWithPluralizedTablePhysicalNamingStrategy

# JWT Config (si tu microservicio maneja JWT)
authorization.jwt.secret=WriteHereYourSecretStringForTokenSigningCredentials
authorization.jwt.expiration.days=7

# Info de documentación (opcional)
documentation.application.description=@project.description@
documentation.application.version=@project.version@

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.retries=1
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Nombre del tópico para los eventos de usuarios creados
topic.name.user-created=user.created

